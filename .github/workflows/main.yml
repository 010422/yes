name: Build macOS Intel Version

on:
  push:
    tags:
      - 'v*'  # 当推送版本标签时触发构建
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build:
    runs-on: macos-latest  # 使用 GitHub 提供的 macOS 构建环境

    steps:
      # 步骤 1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 步骤 2: 设置 Node.js 环境
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # 使用 Node.js 16.x 版本

      # 步骤 3: 安装项目依赖
      - name: Install dependencies
        run: |
          npm install  # 安装项目的依赖

      # 步骤 4: 构建项目
      - name: Build the app
        run: |
          npm run build  # 如果你有 'build' 命令，确保执行它以构建项目

      # 步骤 5: 使用 electron-builder 打包 macOS 英特尔版本
      - name: Build macOS Intel app
        run: |
          npx electron-builder --mac --x64 --publish never  # 使用 electron-builder 打包 macOS 英特尔版本

      # 步骤 6: 上传构建产物 (macOS DMG)
      - name: Upload macOS DMG
        uses: actions/upload-artifact@v3
        with:
          name: YesPlayMusic-mac
          path: dist_electron/*.dmg  # 假设构建产物存放在 dist_electron 文件夹
